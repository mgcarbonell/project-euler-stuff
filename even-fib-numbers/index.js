/** 
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 */


function sumFib(n) {
  let result = 0;
  for (let i = 1; i <= n; i++) {
    let number = fib(i);
    if (number % 2 === 0) {
      result += number;
    }
  }
  return result;
}

function memoize(fn) {
  const cache = {};
  return function (...args) {
    if (cache[args]) return cache[args];
    const result = fn.apply(this, args);
    cache[args] = result;
    return result;
  }
}

function fib(n) {
  if (n < 2) return n;

  return fib(n - 1) + fib(n - 2);
}


fib = memoize(fib);
const total = sumFib(33)
console.log(total)

/**
 *https://medium.com/@vinaychandranvs/javascript-solution-to-project-euler-problem-2-10e161238350
 * Function written by Vinay Chandran
 * Assisted in trouble shooting original implementation.
 */

// function sumEvenFib(n) {
//   let previous = 0;
//   let current = 1;
//   let result = 0;

//   for (let i = 0; i <= n; i++) {
//     const next = previous + current

//     if (next > 4000000) {
//       break;
//     }

//     if (next % 2 === 0) {
//       result += next;
//     }

//     previous = current;
//     current = next;
//   }

//   return result;
// }